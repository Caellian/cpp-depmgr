include(FetchContent)

fetchcontent_declare(
  tomlc99
  GIT_REPOSITORY https://github.com/cktan/tomlc99.git
  GIT_TAG 5221b3d3d66c25a1dc6f0372b4f824f1202fe398 # v1.0
  GIT_SHALLOW TRUE
)
fetchcontent_declare(
  glob
  GIT_REPOSITORY https://github.com/p-ranav/glob.git
  GIT_TAG d025092c0e1eb1a8b226d3a799fd32680d2fd13f # v0.0.1
  GIT_SHALLOW TRUE
)
fetchcontent_declare(
  fmt
  GIT_REPOSITORY https://github.com/fmtlib/fmt.git
  GIT_TAG 10.2.1
  GIT_SHALLOW TRUE
)
fetchcontent_declare(
  libgit2
  GIT_REPOSITORY https://github.com/libgit2/libgit2.git
  GIT_TAG v1.8.1
  GIT_SHALLOW TRUE
)

fetchcontent_getproperties(tomlc99)
if(NOT tomlc99_POPULATED)
  fetchcontent_populate(tomlc99)
  configure_file("${tomlc99_SOURCE_DIR}/toml.h" "${tomlc99_BINARY_DIR}/include/toml.h")
  add_library(toml STATIC "${tomlc99_SOURCE_DIR}/toml.c" "${tomlc99_SOURCE_DIR}/toml.h")
  set_target_properties(
    toml
    PROPERTIES VERSION 1.0
               LANGUAGE C
               C_STANDARD 99
               C_EXTENSIONS FALSE
  )
endif()
list(APPEND THIRDPARTY_LIBS toml)
list(APPEND THIRDPARTY_INCLUDE_DIRS "${tomlc99_BINARY_DIR}/include")
mark_as_advanced(FETCHCONTENT_SOURCE_DIR_TOMLC99 FETCHCONTENT_UPDATES_DISCONNECTED_TOMLC99)

fetchcontent_makeavailable(glob)
list(APPEND THIRDPARTY_LIBS glob)
list(APPEND THIRDPARTY_INCLUDE_DIRS "${glob_SOURCE_DIR}/include")
mark_as_advanced(
  CPM_DONT_CREATE_PACKAGE_LOCK
  CPM_DONT_UPDATE_MODULE_PATH
  CPM_DOWNLOAD_ALL
  CPM_INCLUDE_ALL_IN_PACKAGE_LOCK
  CPM_LOCAL_PACKAGES_ONLY
  CPM_SOURCE_CACHE
  CPM_USE_LOCAL_PACKAGES
  CPM_USE_NAMED_CACHE_DIRECTORIES
  GLOB_USE_GHC_FILESYSTEM
  FETCHCONTENT_SOURCE_DIR_PACKAGEPROJECT.CMAKE
  FETCHCONTENT_UPDATES_DISCONNECTED_PACKAGEPROJECT.CMAKE
  FETCHCONTENT_SOURCE_DIR_GLOB
  FETCHCONTENT_UPDATES_DISCONNECTED_GLOB
)

fetchcontent_getproperties(fmt)
if(NOT fmt_POPULATED)
  fetchcontent_populate(fmt)
  set(FMT_INSTALL
      OFF
      CACHE INTERNAL "" FORCE
  )
  add_subdirectory("${fmt_SOURCE_DIR}" "${fmt_BINARY_DIR}")
endif()
list(APPEND THIRDPARTY_LIBS fmt::fmt)
mark_as_advanced(
  FMT_CMAKE_DIR
  FMT_CUDA_TEST
  FMT_DEBUG_POSTFIX
  FMT_DOC
  FMT_FUZZ
  FMT_INC_DIR
  FMT_LIB_DIR
  FMT_MODULE
  FMT_OS
  FMT_PEDANTIC
  FMT_PKGCONFIG_DIR
  FMT_SYSTEM_HEADERS
  FMT_TEST
  FMT_WERROR
  PCRE_INCLUDE_DIR
  PCRE_LIBRARY
  REGEX_BACKEND
  FETCHCONTENT_SOURCE_DIR_FMT
  FETCHCONTENT_UPDATES_DISCONNECTED_FMT
)

fetchcontent_getproperties(libgit2)
if(NOT libgit2_POPULATED)
  fetchcontent_populate(libgit2)
  set(BUILD_TESTS
      OFF
      CACHE INTERNAL "" FORCE
  )
  set(BUILD_CLI
      OFF
      CACHE INTERNAL "" FORCE
  )
  add_subdirectory("${libgit2_SOURCE_DIR}" "${libgit2_BINARY_DIR}")
endif()
list(APPEND THIRDPARTY_LIBS ${LIBGIT2_OBJECTS})
list(APPEND THIRDPARTY_INCLUDE_DIRS ${LIBGIT2_INCLUDES})
mark_as_advanced(
  BUILD_EXAMPLES
  BUILD_FUZZERS
  COM_ERR_LIBRARY
  DEBUG_POOL
  DEBUG_STRICT_ALLOC
  DEBUG_STRICT_OPEN
  DEPRECATE_HARD
  ENABLE_REPRODUCIBLE_BUILDS
  ENABLE_WERROR
  EXPERIMENTAL_SHA256
  GSSAPI_INCLUDE_DIR
  GSSAPI_LIBRARY
  K5CRYPTO_LIBRARY
  KRB5_LIBRARY
  LIBGIT2_FILENAME
  SONAME
  USE_BUNDLED_ZLIB
  USE_GSSAPI
  USE_HTTP_PARSER
  USE_HTTPS
  USE_LEAK_CHECKER
  USE_NSEC
  USE_NTLMCLIENT
  USE_SHA1
  USE_SHA256
  USE_SSH
  USE_STANDALONE_FUZZERS
  USE_THREADS
  FETCHCONTENT_SOURCE_DIR_LIBGIT2
  FETCHCONTENT_UPDATES_DISCONNECTED_LIBGIT2
)

mark_as_advanced(
  FETCHCONTENT_BASE_DIR
  FETCHCONTENT_FULLY_DISCONNECTED
  FETCHCONTENT_QUIET
  FETCHCONTENT_UPDATES_DISCONNECTED
)

set(THIRDPARTY_LIBS
    "${THIRDPARTY_LIBS}"
    PARENT_SCOPE
)
set(THIRDPARTY_INCLUDE_DIRS
    "${THIRDPARTY_INCLUDE_DIRS}"
    PARENT_SCOPE
)
